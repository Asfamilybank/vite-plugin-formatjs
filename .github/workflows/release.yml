name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write  # Required for OIDC
  contents: write  # Required for GitHub Release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run tests
        run: pnpm plugin test
      
      - name: Run linting
        run: pnpm plugin lint
      
      - name: Run type checking
        run: pnpm plugin typecheck
      
      - name: Build package
        run: pnpm plugin build
      
      - name: Verify build output
        run: |
          echo "Checking build output..."
          ls -la packages/plugin/dist/
          echo "Checking if main files exist..."
          test -f packages/plugin/dist/index.js
          test -f packages/plugin/dist/index.d.ts
          test -f packages/plugin/dist/index.cjs
          echo "Build verification completed"
      
      - name: Publish to npm
        run: pnpm plugin release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get the current version
          VERSION=$(node -p "require('./packages/plugin/package.json').version")
          
          # Extract the content for the corresponding version from CHANGELOG.md
          if [ -f "CHANGELOG.md" ]; then
            # Use awk to extract the version content
            CHANGELOG_CONTENT=$(awk -v version="[$VERSION]" '
              BEGIN { found=0; content="" }
              /^## \[.*\]/ { 
                if ($0 ~ version) { 
                  found=1 
                } else { 
                  found=0 
                }
              }
              found { 
                if (content != "") content = content "\n" $0
                else content = $0
              }
              /^## \[.*\]/ && found==0 { 
                if (content != "" && content !~ /^## \[.*\]/) {
                  exit
                }
              }
            ' CHANGELOG.md)
            
            if [ -n "$CHANGELOG_CONTENT" ]; then
              RELEASE_BODY="$CHANGELOG_CONTENT
              
              ## Installation
              
              \`\`\`bash
              npm install -D vite-plugin-formatjs
              \`\`\`
              
              ## Documentation
              
              See the [README](https://github.com/asfamilybank/vite-plugin-formatjs#readme) for detailed usage instructions."
            else
              RELEASE_BODY="## What's Changed
              
              This release includes the latest improvements and bug fixes.
              
              ## Installation
              
              \`\`\`bash
              npm install -D vite-plugin-formatjs
              \`\`\`
              
              ## Documentation
              
              See the [README](https://github.com/asfamilybank/vite-plugin-formatjs#readme) for detailed usage instructions."
            fi
          else
            RELEASE_BODY="## What's Changed
              
              This release includes the latest improvements and bug fixes.
              
              ## Installation
              
              \`\`\`bash
              npm install -D vite-plugin-formatjs
              \`\`\`
              
              ## Documentation
              
              See the [README](https://github.com/asfamilybank/vite-plugin-formatjs#readme) for detailed usage instructions."
          fi
          
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.release_notes.outputs.body }}
          draft: false
          prerelease: false 